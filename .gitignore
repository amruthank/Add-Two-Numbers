#include<stdio.h>
#include<stdlib.h>
#include<string.h>


struct node{
	int val;
	struct node *ptr;
};


struct node *createNode(struct node *head,int data){
	struct node *tmp = (struct node *)malloc(sizeof(struct node));
	tmp->val = data;
	tmp->ptr = NULL;

	if(!head)
		return tmp;
	else{
		struct node *t = head;
		while(t->ptr != NULL)
			t = t->ptr;
	
		t->ptr = tmp;
	}
	return head;
}


void display(struct node *head){
	while(head){
		printf("%d\t",head->val);
		head = head->ptr;
	}
	printf("\n");
}



struct node *reverse(struct node *head){
	struct node *prev = NULL,*tmp=head,*next;
	while(tmp){
			next = tmp->ptr;
			tmp->ptr = prev;
			prev = tmp;
			tmp = next;
		}	
	return prev;
}



//For the better understanding reverse a list1 and list2 using reverse().
struct node *addTwoNumbers(struct node *head1,struct node *head2,struct node *head3){
	int sum=0;

	while(head1 || head2){
		sum += ((head1?head1->val:0)+(head2?head2->val:0));

		if(head1)
			head1 = head1->ptr;

		if(head2)
			head2 = head2->ptr;
		
		if(sum>9){
			head3 =  createNode(head3,sum%10);	
			sum = sum/10;
		}
		else{
			head3 =  createNode(head3,sum);	
			sum = 0;
		}
		
	}

	//Create a node for the carry
	if(sum>0)
		head3 =  createNode(head3,sum);	

	head3 = reverse(head3);
	return head3;
}

void main(){
	struct node *head1 = NULL,*head2 = NULL,*head3 = NULL;;
	
	head1 = createNode(head1,1);
	head1 = createNode(head1,2);
	head1 = createNode(head1,3);
	display(head1);	
	head2 = createNode(head2,8);
	head2 = createNode(head2,8);
	head2 = createNode(head2,2);
	display(head2);

	head1 = reverse(head1);
	head2 = reverse(head2);	
	
	head3 = addTwoNumbers(head1,head2,head3);
	printf("----- Sum  -----\n");
	display(head3);
	
}
